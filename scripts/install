#!/bin/bash

#=================================================
# GENERIC START
#=================================================
# IMPORT GENERIC HELPERS
#=================================================

source _common.sh
source ynh_install_go
source ynh_add_swap
source /usr/share/yunohost/helpers

#=================================================
# MANAGE SCRIPT FAILURE
#=================================================

ynh_clean_setup () {
	### Remove this function if there's nothing to clean before calling the remove script.
	true
}
# Exit if an error occurs during the execution of the script
ynh_abort_if_errors

#=================================================
# RETRIEVE ARGUMENTS FROM THE MANIFEST
#=================================================

domain=$YNH_APP_ARG_DOMAIN
path_url=$YNH_APP_ARG_PATH
is_public=$YNH_APP_ARG_IS_PUBLIC
language=$YNH_APP_ARG_LANGUAGE
password=$YNH_APP_ARG_PASSWORD

app=$YNH_APP_INSTANCE_NAME

if [ $language == "fr" ]; then
	language_key="french"
else
	language_key="english"
fi

#=================================================
# CHECK IF THE APP CAN BE INSTALLED WITH THESE ARGS
#=================================================

ynh_script_progression --message="Validating installation parameters..." --time --weight=1

final_path=/var/www/$app
test ! -e "$final_path" || ynh_die --message="This path already contains a folder"

# Register (book) web path
ynh_webpath_register --app=$app --domain=$domain --path_url=$path_url

#=================================================
# STORE SETTINGS FROM MANIFEST
#=================================================
ynh_script_progression --message="Storing installation settings..." --time --weight=1

ynh_app_setting_set --app=$app --key=domain --value=$domain
ynh_app_setting_set --app=$app --key=path --value=$path_url
ynh_app_setting_set --app=$app --key=language --value=$language_key

#=================================================
# ADDING SWAP IF NEEDED
#=================================================

echo ynh_get_ram -t
if [ $(ynh_get_ram -t) <= 2000 ]
	ynh_script_progression --message="Adding swap to help building Photoprism..." --time --weight=1
	ynh_add_swap --size=1000
	swapFlag = true
else
	swapFlag = false
fi
echo ynh_get_ram -t

#=================================================
# STANDARD MODIFICATIONS
#=================================================
# FIND AND OPEN A PORT
#=================================================
ynh_script_progression --message="Finding an available port..." --time --weight=1

# Find an available port
port=$(ynh_find_port --port=2342)
ynh_app_setting_set --app=$app --key=port --value=$port

#=================================================
# INSTALL DEPENDENCIES
#=================================================
ynh_script_progression --message="Installing dependencies..." --time --weight=1

ynh_install_app_dependencies $pkg_dependencies

# Install nodejs
ynh_install_nodejs --nodejs_version=$NODEJS_VERSION 2>&1

# Install go
ynh_exec_warn_less ynh_install_go --go_version=$GO_VERSION

#=================================================
# CREATE DEDICATED USER
#=================================================
ynh_script_progression --message="Configuring system user..." --time --weight=1

# Create a system user
ynh_system_user_create --username=$app --home_dir="$final_path"

#=================================================
# CREATE A MYSQL DATABASE
#=================================================
ynh_script_progression --message="Creating a MySQL database..." --time --weight=1

db_name=$(ynh_sanitize_dbid --db_name=$app)
db_user=$db_name
ynh_app_setting_set --app=$app --key=db_name --value=$db_name
ynh_mysql_setup_db --db_user=$db_user --db_name=$db_name

#=================================================
# DOWNLOAD, CHECK AND UNPACK SOURCE
#=================================================
ynh_script_progression --message="Setting up source files..." --time --weight=1

ynh_app_setting_set --app=$app --key=final_path --value=$final_path
# Download, check integrity, uncompress and patch the source from app.src
#ynh_setup_source --dest_dir="$final_path"

# I need to use git clone instead of ynh_setup_source

pushd "/var/www/"
	git clone https://github.com/photoprism/photoprism
popd

pushd "$final_path"
	git checkout "$PHOTOPRISM_VERSION" 2>&1
popd

chmod 750 "$final_path"
chmod -R o-rwx "$final_path"
chown -R $app:www-data "$final_path"

#=================================================
# NGINX CONFIGURATION
#=================================================
ynh_script_progression --message="Configuring NGINX web server..." --time --weight=1

# Create a dedicated NGINX config
ynh_add_nginx_config

#=================================================
# BUILD PHOTOPRISM
#=================================================
ynh_script_progression --message="Building Photoprism..." --time --weight=1

pushd "$final_path"
	# Setup go exe and environnement
	ynh_use_go
	export GOPATH="$final_path/go"
	export GOCACHE="$final_path/go/.cache"
	export GOBIN=$GOPATH/bin
	# Setup tensorflow library
	./scripts/dist/install-tensorflow.sh
	# Build server from source
	make all install DESTDIR=$final_path/build 2>&1
	ynh_secure_remove --file="$final_path/go"
popd

#=================================================
# REMOVING SWAP IF NEEDED
#=================================================

if [ swapFlag ]
	ynh_del_swap
	ynh_script_progression --message="Removing swap..." --time --weight=1
fi

#=================================================
# CREATE DATA DIRECTORY
#=================================================
ynh_script_progression --message="Creating a data directory..." --time --weight=1

datadir=/home/yunohost.app/$app
ynh_app_setting_set --app=$app --key=datadir --value=$datadir

mkdir -p $datadir
mkdir "$datadir/assets/"
mv "$final_path/build/assets/"*  "$datadir/assets/"

chmod 750 "$datadir"
chmod -R o-rwx "$datadir"
chown -R $app:www-data "$datadir"


#=================================================
# ADD A CONFIGURATION
#=================================================
ynh_script_progression --message="Adding a configuration file..." --time --weight=1

ynh_add_config --template="options.yml" --destination="$final_path/build/config/options.yml"
chmod 400 "$final_path/build/config/options.yml"
chown $app:$app "$final_path/build/config/options.yml"

#=================================================
# SETUP SYSTEMD
#=================================================
ynh_script_progression --message="Configuring a systemd service..." --time --weight=1

# Create a dedicated systemd config
ynh_add_systemd_config

#=================================================
# GENERIC FINALIZATION
#=================================================
# SETUP LOGROTATE
#=================================================
ynh_script_progression --message="Configuring log rotation..." --time --weight=1

# Use logrotate to manage application logfile(s)
ynh_use_logrotate

#=================================================
# INTEGRATE SERVICE IN YUNOHOST
#=================================================
ynh_script_progression --message="Integrating service in YunoHost..." --time --weight=1

yunohost service add $app --description="AI-Powered Photos App for the Decentralized Web" --log="/var/log/$app/$app.log"

#=================================================
# START SYSTEMD SERVICE
#=================================================
ynh_script_progression --message="Starting a systemd service..." --time --weight=1

# Start a systemd service
ynh_systemd_action --service_name=$app --action="start" --log_path="/var/log/$app/$app.log"

#=================================================
# SETUP SSOWAT
#=================================================
ynh_script_progression --message="Configuring permissions..." --time --weight=1

# Make app public if necessary
if [ $is_public -eq 1 ]
then
	# Everyone can access the app.
	# The "main" permission is automatically created before the install script.
	ynh_permission_update --permission="main" --add="visitors"
fi

#=================================================
# RELOAD NGINX
#=================================================
ynh_script_progression --message="Reloading NGINX web server..." --time --weight=1

ynh_systemd_action --service_name=nginx --action=reload

#=================================================
# END OF SCRIPT
#=================================================

ynh_script_progression --message="Installation of $app completed" --time --last
